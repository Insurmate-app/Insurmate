(()=>{var e={760:(e,t,s)=>{const a=s(134);e.exports={createUser:async(e,t,s)=>{try{const s=e.body,r=await a.createUser(s);t.status(201).json(r)}catch(e){s(e)}},resetPassword:async(e,t,s)=>{try{const{email:s,password:r}=e.body;await a.resetPassword(s,r),t.status(200).json("Password reset successful.")}catch(e){s(e)}},loginUser:async(e,t,s)=>{try{const{email:s,password:r}=e.body;await a.loginUser(s,r),t.status(200).json("Login successful.")}catch(e){s(e)}},verifyUser:async(e,t,s)=>{try{const{email:s,otpToken:r}=e.body;await a.verifyUser(s,r),t.status(200).json("Verification Successful.")}catch(e){s(e)}},regenerateOtp:async(e,t,s)=>{try{const{email:s}=e.body;await a.regenerateOtp(s),t.status(200).json("OTP regenerated successfully.")}catch(e){s(e)}}}},647:e=>{e.exports=function(e,t=500){const s=new Error(e);return s.statusCode=t,s}},509:(e,t,s)=>{const{createLogger:a,format:r,transports:o}=s(124),{combine:n,timestamp:i,printf:c}=r,d=c((({level:e,message:t,timestamp:s})=>`${s} ${e}: ${t}`)),m=a({level:"info",format:n(i(),d),transports:[new o.Console,new o.File({filename:"app.log"})]});e.exports=m},857:e=>{e.exports=(e,t,s,a)=>{const r=e.statusCode||500;s.status(r).json({statusCode:r,message:e.message||"Internal Server Error"})}},870:(e,t,s)=>{const{validationResult:a}=s(975);e.exports=function(e,t,s){const r=a(e);if(!r.isEmpty()){const e=r.array().map((e=>e.msg));return t.status(400).json({message:"Validation failed",errors:e})}s()}},778:(e,t,s)=>{const a=s(37),r=new a.Schema({email:{type:String,unique:!0,required:!0,match:[/.+@.+\..+/,"Please enter a valid email address"],maxlength:100},password:{type:String,required:!0,minlength:8,maxlength:128},companyName:{type:String,required:!0,minlength:8,maxlength:100},failedLoginAttempts:{type:Number,default:0,required:!0},activeAccount:{type:Boolean,default:!0,required:!0},address:{addressLine1:{type:String,required:!0,maxLength:300},addressLine2:{type:String,maxLength:50},city:{type:String,required:!0,maxLength:30},state:{type:String,required:!0,maxLength:30},zipCode:{type:String,required:!0,maxLength:30}}},{timestamps:!0});e.exports=a.model("User",r)},414:(e,t,s)=>{const a=s(252).Router(),r=s(870),{check:o}=s(975),n=s(760),i=/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/,c=/^(?=.*[A-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;a.post("/create",[o("email").notEmpty().withMessage("Email is required").isLength({max:100}).withMessage("Email must be no more than 100 characters long").matches(i).withMessage("Invalid email format"),o("password").notEmpty().withMessage("Password is required").isLength({min:8,max:28}).withMessage("Password must be between 8 and 28 characters long").matches(c).withMessage("Password must contain at least one uppercase letter and one special character"),o("companyName").notEmpty().withMessage("Company name is required").isLength({min:8,max:28}).withMessage("Company name must be between 8 and 28 characters long"),o("address.addressLine1").notEmpty().withMessage("Address line 1 is required").isLength({max:300}).withMessage("Address line 1 must be no more than 300 characters long"),o("address.addressLine2").optional().isLength({max:50}).withMessage("Address line 2 must be no more than 50 characters long"),o("address.city").notEmpty().withMessage("City is required").isLength({max:30}).withMessage("City must be no more than 30 characters long"),o("address.state").notEmpty().withMessage("State is required").isLength({max:30}).withMessage("State must be no more than 30 characters long"),o("address.zipCode").notEmpty().withMessage("Zip code is required").isLength({max:30}).withMessage("Zip code must be no more than 30 characters long")],r,n.createUser),a.post("/login",[o("email").notEmpty().withMessage("Email is required").isLength({max:100}).withMessage("Email must be no more than 100 characters long").matches(i).withMessage("Invalid email format"),o("password").notEmpty().withMessage("Password is required").isLength({min:8,max:28}).withMessage("Password must be between 8 and 28 characters long").matches(c).withMessage("Password must contain at least one uppercase letter and one special character")],r,n.loginUser),a.post("/verify",[o("email").notEmpty().withMessage("Email is required").isLength({max:100}).withMessage("Email must be no more than 100 characters long").matches(i).withMessage("Invalid email format"),o("otpToken").notEmpty().withMessage("OTP Token is required").isNumeric().isLength({max:6}).withMessage("OTP Token must be no more than 6 digits or less than long")],r,n.verifyUser),a.put("/reset-password",[o("email").notEmpty().withMessage("Email is required").isLength({max:100}).withMessage("Email must be no more than 100 characters long").matches(i).withMessage("Invalid email format"),o("password").notEmpty().withMessage("Password is required").isLength({min:8,max:28}).withMessage("Password must be between 8 and 28 characters long").matches(c).withMessage("Password must contain at least one uppercase letter and one special character")],r,n.resetPassword),a.post("/regenerate-otp",[o("email").notEmpty().withMessage("Email is required").isLength({max:100}).withMessage("Email must be no more than 100 characters long").matches(i).withMessage("Invalid email format")],r,n.regenerateOtp),e.exports=a},356:(e,t,s)=>{s(818).config();const a=s(572),r=s(509),o=process.env.EMAIL,n=process.env.PASSWORD,i=a.createTransport({host:"mail.wecare-insurance.com",port:587,auth:{user:o,pass:n}});e.exports={sendEmail:async({to:e,subject:t,text:s})=>{const a={from:o,to:e,cc:"toearkar@protonmail.com",subject:t,text:s};try{const e=await i.sendMail(a);return r.info("Email sent: ",e.response),e}catch(e){throw r.error("Error sending email:",e),new Error("Error sending email")}}}},224:(e,t,s)=>{const a=s(486),r=s(288),{LRUCache:o}=s(678),n=s(509),i=s(647);r.authenticator.options={step:900};const c=new o({max:300,maxSize:30,sizeCalculation:(e,t)=>e.otp.length,ttl:36e5,ttlAutopurge:!0});e.exports={hashPassword:async function(e){try{return await a.hash(e,10)}catch(e){throw n.error(e.message),e}},checkPassword:async function(e,t){try{return await a.compare(e,t)}catch(e){throw n.error(e.message),e}},generateOtp:async e=>{try{c.get(e)&&c.delete(e);const t=r.authenticator.generateSecret(),s=r.authenticator.generate(t);return c.set(e,{otp:s,secret:t}),s}catch(e){throw n.error(e.message),e}},verifyOtp:async(e,t)=>{try{const s=c.get(e);if(!s)throw n.error(`OTP not found or expired for id: ${e}`),i("OTP not found or expired.",401);const{otp:a,secret:r}=s;if(n.info(`Cached OTP: ${a}, Secret: ${r}, Provided Token: ${t} for id: ${e}`),a.toString().trim()!==t.toString().trim())throw n.error(`Provided token does not match cached OTP for id: ${e}`),i("Invalid OTP",401);c.delete(e)}catch(t){throw n.error(`Error during OTP verification for id: ${e} - ${t.message}`),t.statusCode>=400&&t.statusCode<500?t:i("Your OTP is invalid. Please try again.",500)}}}},134:(e,t,s)=>{const a=s(778),r=s(356),o=s(825),n=s(509),i=s(647),c=s(224),d=async(e,t)=>{await r.sendEmail({to:e,subject:"Activate Account",text:`Hi there, \nPlease use the following OTP to activate your account: ${t}. This OTP is valid for 5 minutes.`})},m=async e=>{const t=await a.findOne({email:e});if(!t)throw i("User not found.",404);return t};e.exports={findUserByEmail:m,createUser:async e=>{try{e.failedLoginAttempts=0,e.activeAccount=!1;const t=await c.hashPassword(e.password);e.password=t;const s=await a.create(e),r=await c.generateOtp(s.email);return s&&await d(s.email,r),o.pick(s,["email","companyName","address.addressLine1","address.addressLine2","address.city","address.state","address.zipCode"])}catch(e){if(11e3===e.code){const t=Object.keys(e.keyValue)[0];throw i(`Duplicate field value: '${t}' already exists.`,409)}throw n.error(e.message),e}},resetPassword:async(e,t)=>{try{const s=await m(e);if(!s)throw i("User not found.",404);t=await c.hashPassword(t);const r=await a.findByIdAndUpdate(s._id,{password:t,activeAccount:!1},{new:!0});if(!r)throw i("User not found.",404);const o=await c.generateOtp(s.email);r&&await d(r.email,o)}catch(e){throw e.statusCode>=400&&e.statusCode<500?e:(n.error(e.message),i("Unable to reset password.",500))}},loginUser:async(e,t)=>{try{const s=await m(e);if(!s)throw i("User not found.",400);if(!s.activeAccount)throw i("Account is inactive, a new verification code has been sent to your email address.",401);if(s.failedLoginAttempts>=5)throw i("Account is locked due to more than 5 failed login attempts.",401);if(!await c.checkPassword(t,s.password))throw s.failedLoginAttempts+=1,await s.save(),i("Invalid password.",401);s.failedLoginAttempts=0,s.activeAccount=!0,await s.save()}catch(e){throw e.statusCode>=400&&e.statusCode<500?e:(n.error(e.message),i("Unable to login.",500))}},verifyUser:async(e,t)=>{try{const s=await m(e);if(!s)throw i("User not found.",400);await c.verifyOtp(e,t),s.activeAccount=!0,s.failedLoginAttempts=0,await s.save()}catch(e){throw e.statusCode>=400&&e.statusCode<500?e:(n.error(e.message),i("Unable to verify.",500))}},regenerateOtp:async e=>{try{const t=await m(e);if(!t)throw i("User not found.",404);if(t.activeAccount)throw i("Account is already active.",400);await a.findByIdAndUpdate(t._id,{activeAccount:!1},{new:!0});const s=await c.generateOtp(e);await d(t.email,s)}catch(e){if(e.statusCode>=400&&e.statusCode<500)throw e;n.error(e.message)}}}},486:e=>{"use strict";e.exports=require("bcrypt")},577:e=>{"use strict";e.exports=require("cors")},818:e=>{"use strict";e.exports=require("dotenv")},252:e=>{"use strict";e.exports=require("express")},617:e=>{"use strict";e.exports=require("express-graceful-shutdown")},239:e=>{"use strict";e.exports=require("express-healthcheck")},763:e=>{"use strict";e.exports=require("express-rate-limit")},975:e=>{"use strict";e.exports=require("express-validator")},525:e=>{"use strict";e.exports=require("helmet")},825:e=>{"use strict";e.exports=require("lodash")},678:e=>{"use strict";e.exports=require("lru-cache")},37:e=>{"use strict";e.exports=require("mongoose")},572:e=>{"use strict";e.exports=require("nodemailer")},288:e=>{"use strict";e.exports=require("otplib")},124:e=>{"use strict";e.exports=require("winston")}},t={};function s(a){var r=t[a];if(void 0!==r)return r.exports;var o=t[a]={exports:{}};return e[a](o,o.exports,s),o.exports}(()=>{"use strict";s(818).config();const e=s(525),t=s(37),a=s(252),r=s(239),o=s(617),n=(s(763),s(577)),i=a(),c=s(857),d=s(414),m=process.env.DATABASE_URL,u=process.env.MAX_POOL_SIZE,l=process.env.MAX_Idle_Time_MS,h=process.env.CONECTION_TIMEOUT_MS;i.use(e()),i.use(((e,t,s)=>{t.setHeader("X-XSS-Protection","1; mode=block"),s()})),i.use(n()),i.use(a.json()),i.use(a.urlencoded({extended:!1}));const p=process.env.PORT||3e3;i.use("/health",r()),i.use("/v1/api/user",d),i.get("/",((e,t)=>t.send("App is working!"))),i.use(c),i.use(o(i));const g=i.listen(p,(()=>{console.log(`Server is running on port ${p}`)}));g.on("close",(()=>{console.log("Server has closed all connections.")})),t.connect(m,{maxPoolSize:u,maxIdleTimeMS:l,connectTimeoutMS:h}).then((()=>{console.log("Connected to database!")})).catch((e=>{console.log(e),console.log("Connection failed!")}));const w=async()=>{console.log("Graceful shutdown initiated."),g.close((e=>{e&&(console.error("Error closing server:",e),process.exit(1)),console.log("HTTP server closed, now closing MongoDB connection."),t.disconnect()})),setTimeout((()=>{console.log("Forcing shutdown after timeout."),process.exit(1)}),1e4)};process.on("SIGTERM",w),process.on("SIGINT",w)})()})();